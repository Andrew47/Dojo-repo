install.packages("testthat")
?expect_that
mysum <- function(dat, col.name) {
testthat::expect_that(class(dat), equals("data.frame"))
sum(dat[ ,col.name])
}
mysum(mtcars, "cyl")
library(testthat)
mysum <- function(dat, col.name) {
testthat::expect_that(class(dat), equals("data.frame"))
sum(dat[ ,col.name])
}
mysum(mtcars, "cyl")
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "cyl"), equals(200))
head(mtcars)
ss1 = mtcars[mtcars$vs==1, ]
mysum(ss1, "cyl")
mysum(mtcars, "cyl")
ss1 = mtcars[mtcars$vs==1, ]
ss0 = mtcars[mtcars$vs==0, ]
saveRDS(ss1, "ss1.rds")
saveRDS(ss0, "ss0.rds")
ss1 = readRDS("ss1.rds")
ss0 = readRDS("ss0.rds")
ss1
ss0
source("tt_functions.R")
library(testthat)
source("tt_functions.R")
expect_that(mysum(mtcars, "cyl"), equals(200))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(64))
data.frame(cyl=c(NA,rnorm(100)))
saveRDS(data.frame(cyl=c(NA,rnorm(100))), "ssNA.rds")
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
is.na(NA_real_)
is.na(NA_character__)
is.na(NA_character_)
mysum(readRDS("ssNA.rds"), "cyl")
class(mysum(readRDS("ssNA.rds"), "cyl"))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
?"testthat"
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(200))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
source("tt_functions.R")
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
test_dir()
test_dir(".")
test_dir(".")
test_dir(".")
test_dir(".")
test_dir(".")
test_dir(".")
expect_that(mysumNA(mtcars, "hello"), equals(198))
?tryCatch
library(testthat)
source("tt_functions.R")
context("test 2")
test_that("our mysumNA function doesn't work",
{
expect_that(mysumNA(mtcars, "cyl"), equals(198))
expect_that(mysumNA(mtcars, "hello"), equals(198))
expect_that(mysumNA(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysumNA(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysumNA(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysumNA(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysumNA(readRDS("ssNA.rds"), "cyl"), "numeric")
})
library(testthat)
source("tt_functions.R")
context("Test 1")
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(198))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
library(testthat)
source("tt_functions.R")
context("Test 1")
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(198))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
expect_that(mysum(mtcars, "hello"), equals(-1))
expect_that(mysum(mtcars, "hello"), equals(-1))
source("tt_functions.R")
expect_that(mysum(mtcars, "hello"), equals(-1))
expect_that(mysum("thisisastring", "hello"), equals(-1))
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
data.table(mtcars)
library(testthat); library(data.table)
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
library(testthat); library(data.table)
source("tt_functions.R")
context("Test 1")
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(-1))
expect_that(mysum("thisisastring", "hello"), equals(-1))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
mysum(data.table(mtcars), "cyl")
str(data.table(mt.cars)[ ,"cyl"])
str(data.table(mtcars)[ ,"cyl"])
str(data.table(mtcars)[ ,"cyl", with=F])
str(data.table(mtcars)[ ,list(cyl)])
?sum
sum(data.table(mtcars)[ ,"cyl"])
sum.data.frame(data.table(mtcars)[ ,"cyl"])
sum.dataframe(data.table(mtcars)[ ,"cyl"])
(data.table(mtcars)[ ,"cyl"])
class(data.table(mtcars))
class(data.table(mtcars))[1]
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
source("tt_functions.R")
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
source("tt_functions.R")
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "cyl"), equals(-1))
expect_that(mysum(data.table(mtcars), "hello"), equals(-1))
source('~/Documents/testthat-project/tt_functions.R')
library(testthat); library(data.table)
source("tt_functions.R")
context("Test 1")
test_that("our mysum function doesn't work",
{
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(-1))
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "hello"), equals(-1))
expect_that(mysum("thisisastring", "hello"), equals(-1))
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(-1))
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "hello"), equals(-1))
expect_that(mysum("thisisastring", "hello"), equals(-1))
source('~/Documents/testthat-project/tt_functions.R')
library(testthat); library(data.table)
source("tt_functions.R")
test_dir(".")
library(testthat); library(data.table)
source("tt_functions.R")
test_dir(".")
context("Test 1")    # this will be printed out to know what is being tested
test_that("our mysum function doesn't work",
{
# test our sum function on the cyl column which exists and hello column which doesn't
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(-1))
# test our sum function on the cyl column which exists and hello column which doesn't on a data.table
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "hello"), equals(-1))
# thisisastring isn't a data.table or data.frame so should raise and error in the function
expect_that(mysum("thisisastring", "hello"), equals(-1))
# test the subsets of the mtcars data.frame which we saved earlier
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
# test the subsets of the mtcars data.frame which has an NA appended to the end
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
expect_that(mysum(mtcars, "cyl"), equals(198))
expect_that(mysum(mtcars, "hello"), equals(-1))
# test our sum function on the cyl column which exists and hello column which doesn't on a data.table
expect_that(mysum(data.table(mtcars), "cyl"), equals(198))
expect_that(mysum(data.table(mtcars), "hello"), equals(-1))
# thisisastring isn't a data.table or data.frame so should raise and error in the function
expect_that(mysum("thisisastring", "hello"), equals(-1))
# test the subsets of the mtcars data.frame which we saved earlier
expect_that(mysum(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysum(readRDS("ss0.rds"), "cyl"), equals(134))
# test the subsets of the mtcars data.frame which has an NA appended to the end
expect_that(mysum(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysum(readRDS("ssNA.rds"), "cyl"), "numeric")
})
context("test 2")
test_that("our mysumNA function doesn't work",
{
expect_that(mysumNA(mtcars, "cyl"), equals(198))
expect_that(mysumNA(mtcars, "hello"), equals(198))
expect_that(mysumNA(readRDS("ss1.rds"), "cyl"), equals(64))
expect_that(mysumNA(readRDS("ss0.rds"), "cyl"), equals(134))
expect_that(mysumNA(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_that(mysumNA(readRDS("ssNA.rds"), "cyl"), equals(NA_real_))
expect_is(mysumNA(readRDS("ssNA.rds"), "cyl"), "numeric")
})
test_dir(".")
